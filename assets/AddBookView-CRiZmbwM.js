import{_ as f,r as m,d as v,c as l,a as n,F as y,e as N,q as w,f as p,g as B,h as S,i as g,o as u,t as b,j as x,w as k,v as c,k as q,l as V,m as A}from"./index-Dv5_Y2yd.js";const D={setup(){const t=m([]),o=async()=>{try{const s=w(p(B,"books"),S("isbn",">",1e3)),e=await g(s),d=[];e.forEach(i=>{d.push({id:i.id,...i.data()})}),t.value=d}catch(s){console.error("Error fetching books:",s.code,s.message,s)}};return v(()=>{o()}),{books:t}}};function E(t,o,s,e,d,i){return u(),l("div",null,[o[0]||(o[0]=n("h1",null,"Books with ISBN > 1000",-1)),n("ul",null,[(u(!0),l(y,null,N(e.books,r=>(u(),l("li",{key:r.id},b(r.name)+" - ISBN: "+b(r.isbn),1))),128))])])}const I=f(D,[["render",E]]),L={components:{BookList:I},setup(){const t=m(""),o=m("");return{isbn:t,name:o,addBook:async()=>{try{const e=Number(t.value);if(isNaN(e)){alert("ISBN must be a number");return}await A(p(B,"books"),{isbn:e,name:o.value}),t.value="",o.value="",alert("Book added successfully")}catch(e){console.error("Error adding book: ",e),alert("Failed to add book. See console for details.")}}}}};function F(t,o,s,e,d,i){const r=V("BookList");return u(),l("div",null,[o[6]||(o[6]=n("h1",null,"Add Book",-1)),n("form",{onSubmit:o[2]||(o[2]=q((...a)=>e.addBook&&e.addBook(...a),["prevent"]))},[n("div",null,[o[3]||(o[3]=n("label",{for:"isbn"},"ISBN:",-1)),k(n("input",{type:"text","onUpdate:modelValue":o[0]||(o[0]=a=>e.isbn=a),id:"isbn",required:""},null,512),[[c,e.isbn]])]),n("div",null,[o[4]||(o[4]=n("label",{for:"name"},"Name:",-1)),k(n("input",{type:"text","onUpdate:modelValue":o[1]||(o[1]=a=>e.name=a),id:"name",required:""},null,512),[[c,e.name]])]),o[5]||(o[5]=n("button",{type:"submit"},"Add Book",-1))],32),x(r)])}const $=f(L,[["render",F]]);export{$ as default};
